{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WELCOME\\\\Desktop\\\\FullStack\\\\client-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    const fetchClients = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/clients'); // Ensure this URL matches your Spring Boot endpoint\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const body = await response.json();\n        console.log(\"Fetched clients:\", body); // Log the fetched data\n        setClients(body);\n      } catch (error) {\n        console.error(\"Error fetching clients:\", error); // Log any errors\n      }\n    };\n    fetchClients();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"client details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this), clients.map(client => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [client.name, \" \", client.email]\n    }, client.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 1\n  }, this);\n};\n_s(App, \"Qub/lS2ePd/nwSf4IL1PjSIDl+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","clients","setClients","fetchClients","response","fetch","ok","Error","body","json","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","client","name","email","id","_c","$RefreshReg$"],"sources":["C:/Users/WELCOME/Desktop/FullStack/client-react/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\n\n\n\n\n const App = () => {\n  const[clients,setClients]=useState([]);\n\n  useEffect(()=>{\n              const fetchClients =async () => {\n                try {\n                  const response = await fetch('http://localhost:8080/clients'); // Ensure this URL matches your Spring Boot endpoint\n                  if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                  }\n                  const body = await response.json();\n                  console.log(\"Fetched clients:\", body); // Log the fetched data\n                  setClients(body);\n                } catch (error) {\n                  console.error(\"Error fetching clients:\", error); // Log any errors\n                }\n              };\n               fetchClients();\n               \n  },[])\n  return (\n<div className=\"App-header\">\n  <h1>client details</h1>\n  {clients.map(client =>\n    <div key={client.id}>\n      {client.name} {client.email}\n      </div>\n  )}\n\n</div>\n \n)};\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAK,CAACC,OAAO,EAACC,UAAU,CAAC,GAACN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAI;IACF,MAAMQ,YAAY,GAAE,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC,CAAC,CAAC;QAC/D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,IAAI,CAAC,CAAC,CAAC;QACvCN,UAAU,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC,CAAC;MACnD;IACF,CAAC;IACAT,YAAY,CAAC,CAAC;EAE3B,CAAC,EAAC,EAAE,CAAC;EACL,oBACFL,OAAA;IAAKe,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBjB,OAAO,CAACkB,GAAG,CAACC,MAAM,iBACjBtB,OAAA;MAAAgB,QAAA,GACGM,MAAM,CAACC,IAAI,EAAC,GAAC,EAACD,MAAM,CAACE,KAAK;IAAA,GADnBF,MAAM,CAACG,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEE,CAAC;AAEL,CAAC;AAAClB,EAAA,CA/BID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAgCV,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}