{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WELCOME\\\\Desktop\\\\FullStack\\\\client-react\\\\src\\\\ClientEdit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom/cjs/react-router-dom';\nimport { Form, FormGroup, Input, Button, Container } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientEdit = () => {\n  _s();\n  const emptyItems = {\n    name: '',\n    email: ''\n  };\n  const [items, setItems] = useState(emptyItems);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    const fetchClients = async () => {\n      if (id !== 'new') {\n        const response = await fetch(`http://localhost:8080/clients/${id}`);\n        const client = await response.json();\n        setItems(client);\n      }\n    };\n    fetchClients();\n  }, [id]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setItems(prevItem => ({\n      ...prevItem,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            value: items.name || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"email\",\n            id: \"email\",\n            value: items.email || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 4\n  }, this);\n};\n_s(ClientEdit, \"rwpJ8C177kjILYtSJlft4OtAgtA=\", false, function () {\n  return [useParams];\n});\n_c = ClientEdit;\nexport default ClientEdit;\nvar _c;\n$RefreshReg$(_c, \"ClientEdit\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Form","FormGroup","Input","Button","Container","jsxDEV","_jsxDEV","ClientEdit","_s","emptyItems","name","email","items","setItems","id","fetchClients","response","fetch","client","json","handleChange","e","value","target","prevItem","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/WELCOME/Desktop/FullStack/client-react/src/ClientEdit.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom/cjs/react-router-dom';\r\nimport { Form, FormGroup, Input,Button, Container } from 'reactstrap';\r\nconst ClientEdit = () => {\r\n    const emptyItems={\r\n        name:'',\r\n        email:''\r\n    }\r\n    const[items,setItems]=useState(emptyItems);\r\n    const {id} =useParams();\r\n\r\n   useEffect(()=>{\r\n           const fetchClients= async () =>{\r\n            if(id !== 'new'){\r\n                const response=await fetch(`http://localhost:8080/clients/${id}`);\r\n                const client=await response.json();\r\n                setItems(client)\r\n    } \r\n            }\r\n               \r\n            fetchClients();\r\n   },[id])\r\n   \r\n\r\nconst handleChange=(e)=>{\r\n        const{name,value}=e.target;\r\n        setItems((prevItem)=>({\r\n            ...prevItem,\r\n            [name]:value\r\n        }));\r\n};\r\n    \r\n  return (\r\n   <div>\r\n    <Container>\r\n       <Form>\r\n        <FormGroup>\r\n            <label htmlFor=\"name\">Name</label>\r\n           <Input type=\"text\" name=\"name\" id=\"name\" value={items.name || ''}  onChange={handleChange}/>\r\n        </FormGroup>\r\n        <FormGroup>\r\n            <label htmlFor=\"email\">Email</label>\r\n           <Input type=\"text\" name=\"email\" id=\"email\" value={items.email || ''} onChange={handleChange} />\r\n        </FormGroup>\r\n        <FormGroup>\r\n   <Button>Save</Button>\r\n        </FormGroup>\r\n       </Form>\r\n    </Container>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default ClientEdit"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}